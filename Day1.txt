Day 1:
==>ARTIFICIAL INTELLIGENCE:
---------It is effort to automate the intellectual tasks normally performed by humans.
---------Can computers think? questioned by the scientist created the term AI.
---------It is simply the set of predefined rules eg.,tic-tac-toe game,chess.These are not 
working by itself,human has written tons of lines of code beforehand for the game to execute.
---------Machine learning is a subset of AI.
---------ML comes into play when the data's are given the rules ie., it has the capbility 
to analyse the data and produce the result.

CLASSICAL PROGRAMMING:
---------Data and rules produces result.

MACHINE LEARNIG PROGRAMMING:
---------Data and result produces rules.This is the reason that we do not get high accuracy.
---------So this becomes our goal to create a ML model that makes fewer mistakes.
---------Rather than finding the rules for the program it is finding the rules by the algorithm.

NEURAL NETWORK:
---------Subset of ML
---------It is a form of ML that uses layered representation of data.(multi-stage information
extraction process.)

Note:
---------Data is a important part in ML,NN,AI

Input information:
---------The information that we always have and give it to the models to get some output called features.
---------It is used to make prediction.
Example:
Mid-term 1 and final results are know.therfore they would be the input information ie features.
Our task is to find the performance of mid-term 2 based on mid-term 1 and final result.So here,
mid-term 2 is called as labels.

TENSORS(DAY 2):
---------Tensors are generalization of vectors and matrices with has higher dimension(n).
---------It represents partially defined computation that will eventually produce a value.
---------Each tensor has a datatype(int,float,char etc) and shape(dimensions of data).

HOW TO CREATE TENSOR??
   string = tf.Variable("This is Day 2",tf.string) //scalar since their rank=0
   num = tf.Variable(324,tf.int16)
   floating = tf.Variable(1.234,tf.float64)

RANK OR DEGREE OF TENSOR:
---------The number of dimensions involved in tensor.
ex:
rank1 = tf.Variable([1,2,3],tf.int16) ==>rank=1
rank2 = tf.Variable([[1,2,3],[4,5,6]],tf.int16) ==>rank=2
To get the rank,
tf.rank(rank1)
Output:
<tf.Tensor:shape=(),dtype=int16,numpy=1>

SHAPE OF A TENSOR:
---------The amount of elements that exists in each dimension.
ex:
rank1.shape ==>TensorShape([3])
rank2.shape ==>TensorShape([3,3]) //It should be a square matrix.This means there are 3 elements in the list and there are 3 such list.

RESHAPING A TENSOR:
---------Changing the dimensions of tensor.
Example:
t1 = tf.ones([1,2,3])
Lets go from reverse,
There are 3 elements in each list.There are 2 such list.This is again placed in a common list.
output:
[[[1.1.1.].[1.1.1.]]] ,shape=(1,2,3),dtype=float32

t2 = tf.reshape(t1,[2,3,1])
[[[1.][1.][1.]]
[[1.][1.][1.]]]

t3 = tf.reshape(t1,[3,-1])
//-1 tells the tensr to calculate the size of dimensions in that particular place.
//From above we can see that there is 6 elements in a list so this gets reshaped to [3,2].
//The number of elements in the reshaped tensor must match to the number of elements in the original.
[[1.1.][1.1.][1.1.]]

TYPES OF TENSORS:
1.Variable
2.Constant
3.PlaceHolder
4.SparseTensor
Except variable others are immutable that is their value do not change during execution.

EVALUATION TENSORS:
---------Tensor can be evaluated by session.
This is a default code:

with tf.Session() as sess: //creates a session using default graph
    tensor.eval() //tensor is the name of your tensor

This is a default graph holding normal opration and is not specific to any other graph.

